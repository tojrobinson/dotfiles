# Read File Into Vector
snippet boiler.cpp
	#include <iostream>
	#include <stdio.h>
	#include <string.h>
	#include <string>
	#include <sstream>
	#include <fstream>
	#include <algorithm>
	#include <cmath>
	#include <vector>
	#include <map>
	#include <queue>
	
	using namespace std;

	int main(int argc, char** argv) {
	   ${1}
	}
snippet fi
	for (int i = 0; i < ${1:}; ++i) {
	   ${2:}
	}
snippet fj
	for (int j = 0; j < ${1:}; ++j) {
	   ${2:}
	}
snippet fk
	for (int k = 0; k < ${1:}; ++k) {
	   ${2:}
	}
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}
# std::map
snippet map
	std::map<${1:key}, ${2:value}> map${3};
# std::vector
snippet vector
	std::vector<${1:char}> v${2};
# Namespace
snippet ns
	namespace ${1:`Filename('', 'my')`} {
		${2}
	} /* $1 */
# Class
snippet cl
	class ${1:`Filename('$1_t', 'name')`} {
	public:
		$1 (${2:arguments});
		virtual ~$1 ();

	private:
		${3:/* data */}
	};
snippet fori
	for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {
		${4:/* code */}
	}
